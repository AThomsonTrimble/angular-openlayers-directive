/**!
 * The MIT License
 *
 * Copyright (c) 2013 the angular-leaflet-directive Team, http://tombatossals.github.io/angular-leaflet-directive
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
 * angular-google-maps
 * https://github.com/tombatossals/angular-leaflet-directive
 *
 * @authors https://github.com/tombatossals/angular-leaflet-directive/graphs/contributors
 */

/*! angular-openlayers-directive 16-12-2013 */
!function(){"use strict";angular.module("openlayers-directive",[]).directive("openlayers",["$log","$q","olHelpers","olMapDefaults","olData",function(a,b,c,d,e){var f;return{restrict:"EA",replace:!0,scope:{center:"=center",defaults:"=defaults"},template:'<div class="angular-openlayers-map"></div>',controller:["$scope",function(a){f=b.defer(),this.getMap=function(){return f.promise},this.getOpenlayersScope=function(){return a}}],link:function(a,b,g){var h=c.isDefined,i=c.getLayerObject,j=d.setDefaults(a.defaults,g.id);h(g.width)&&(isNaN(g.width)?b.css("width",g.width):b.css("width",g.width+"px")),h(g.height)&&(isNaN(g.height)?b.css("height",g.height):b.css("height",g.height+"px"));var k=new OpenLayers.Map;if(f.resolve(k),!h(g.tiles)&&!h(g.layers)){var l=i(j.tileLayer);k.addLayer(l)}k.render(b[0]),h(g.center)||k.zoomToMaxExtent(),e.setMap(k,g.id)}}}]),angular.module("openlayers-directive").service("olData",["$log","$q","olHelpers",function(a,b,c){var d=c.getDefer,e=c.getUnresolvedDefer,f=c.setResolvedDefer,g={};this.setMap=function(a,b){var c=e(g,b);c.resolve(a),f(g,b)},this.getMap=function(a){var b=d(g,a);return b.promise}}]),angular.module("openlayers-directive").factory("olHelpers",["$q","$log",function(a,b){function c(a,c){var d,e;if(angular.isDefined(c))d=c;else if(1===Object.keys(a).length)for(e in a)a.hasOwnProperty(e)&&(d=e);else 0===Object.keys(a).length?d="main":b.error("[AngularJS - Openlayers] - You have more than 1 map on the DOM, you must provide the map ID to the olData.getXXX call");return d}function d(b,d){var e,f=c(b,d);return angular.isDefined(b[f])&&b[f].resolvedDefer!==!0?e=b[f].defer:(e=a.defer(),b[f]={defer:e,resolvedDefer:!1}),e}var e=function(a){return angular.isDefined(a)};return{isDefined:e,isNumber:function(a){return angular.isNumber(a)},isDefinedAndNotNull:function(a){return angular.isDefined(a)&&null!==a},isString:function(a){return angular.isString(a)},isArray:function(a){return angular.isArray(a)},isObject:function(a){return angular.isObject(a)},equals:function(a,b){return angular.equals(a,b)},isValidCenter:function(a){return angular.isDefined(a)&&angular.isNumber(a.lat)&&angular.isNumber(a.lng)&&angular.isNumber(a.zoom)},safeApply:function(a,b){var c=a.$root.$$phase;"$apply"===c||"$digest"===c?a.$eval(b):a.$apply(b)},generateUniqueUID:function(){function a(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)}return a()+a()+"-"+a()+"-"+a()+"-"+a()+"-"+a()+a()+a()},obtainEffectiveMapId:c,getDefer:function(a,b){var e,f=c(a,b);return e=angular.isDefined(a[f])&&a[f].resolvedDefer!==!1?a[f].defer:d(a,b)},getUnresolvedDefer:d,setResolvedDefer:function(a,b){var d=c(a,b);a[d].resolvedDefer=!0},getLayerObject:function(a){var b;switch(a.type){case"OSM":var c,d,f;a.name&&(c=a.name),a.url&&(d=a.url,e(c)||(c="OSM Layer")),a.options&&angular.copy(a.options,f),b=new OpenLayers.Layer.OSM(c,d,f)}return b}}}]),angular.module("openlayers-directive").factory("olMapDefaults",["$q","olHelpers",function(a,b){function c(){return{tileLayer:{name:"OpenStreetMap",type:"OSM"}}}var d=b.isDefined,e=b.obtainEffectiveMapId,f={};return{getDefaults:function(a){var b=e(f,a);return f[b]},setDefaults:function(a,b){var g=c();d(a)&&(g.tileLayer=d(a.tileLayer)?a.tileLayer:g.tileLayer);var h=e(f,b);return f[h]=g,g}}}])}();