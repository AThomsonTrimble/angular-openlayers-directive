/*! angular-openlayers-directive WebApp 01-01-2015 */
!function(){"use strict";angular.module("webapp",["ngRoute","openlayers-directive"]).config(["$locationProvider",function(a){a.html5Mode(!1)}]),function(){var a=angular.module("webapp");a.controller("CenterAutodiscoverController",["$scope",function(a){angular.extend(a,{center:{lat:0,lon:0,autodiscover:!1},defaults:{interactions:{mouseWheelZoom:!1}}})}])}(),function(){var a=angular.module("webapp");a.controller("CenterBoundsController",["$scope",function(a){angular.extend(a,{cairo:{lat:30.0047,lon:31.2586,zoom:10,bounds:[]},defaults:{interactions:{mouseWheelZoom:!1}}})}])}(),function(){var a=angular.module("webapp");a.controller("CenterConstrainZoomController",["$scope",function(a){angular.extend(a,{london:{lat:51.505,lon:-.09,zoom:5},defaults:{view:{maxZoom:9,minZoom:6},interactions:{mouseWheelZoom:!1}}})}])}(),function(){var a=angular.module("webapp");a.controller("CenterUrlHashController",["$scope","$location",function(a,b){angular.extend(a,{london:{lat:51.505,lon:-.09,zoom:4,centerUrlHash:!0},defaults:{interactions:{mouseWheelZoom:!1}}}),a.$on("centerUrlHash",function(a,c){b.search({c:c})})}])}(),function(){var a=angular.module("webapp");a.controller("CenterController",["$scope",function(a){angular.extend(a,{london:{lat:51.505,lon:-.09,zoom:6},defaults:{interactions:{mouseWheelZoom:!1}}})}])}(),function(){var a=angular.module("webapp");a.controller("CustomController",["$scope",function(a){angular.extend(a,{london:{lat:51.505,lon:-.09,zoom:8},defaults:{layers:{main:{source:{type:"OSM",url:"http://{a-c}.tile.opencyclemap.org/cycle/{z}/{x}/{y}.png"}}},interactions:{mouseWheelZoom:!1},controls:{zoom:!1,rotate:!1,attribution:!1}}})}])}(),function(){var a=angular.module("webapp");a.controller("EventDefaultsController",["$scope",function(a){angular.extend(a,{london:{lat:51.505,lon:-.09,zoom:4},defaults:{interactions:{mouseWheelZoom:!1}},events:{map:["singleclick","pointermove"]},mouseposition:{},mouseclickposition:{},projection:"EPSG:3857",changeProjection:function(b){a.projection=b}}),a.$on("openlayers.map.pointermove",function(b,c){a.$apply(function(){if(a.projection===c.projection)a.mouseposition=c;else{var b=ol.proj.transform([c.lon,c.lat],c.projection,a.projection);a.mouseposition={lat:b[1],lon:b[0],projection:a.projection}}})}),a.$on("openlayers.map.singleclick",function(b,c){a.$apply(function(){if(a.projection===c.projection)a.mouseclickposition=c;else{var b=ol.proj.transform([c.lon,c.lat],c.projection,a.projection);a.mouseclickposition={lat:b[1],lon:b[0],projection:a.projection}}})})}])}(),function(){var a=angular.module("webapp");a.controller("EventVectorLayerController",["$scope","$location","$http",function(a,b,c){angular.extend(a,{center:{lat:30,lon:0,zoom:2},defaults:{interactions:{mouseWheelZoom:!1}},layers:{main:{source:{type:"TileJSON",url:"http://api.tiles.mapbox.com/v3/mapbox.geography-class.jsonp"}},geojson:{source:{type:"GeoJSON",url:"examples/json/countries.geo.json"}}},events:{layers:{vector:["mousemove","click"]}}}),a.$on("openlayers.geojson.mousemove",function(b,c){a.$apply(function(b){c&&a.countries[c.getId()]&&(b.mouseMoveCountry=c?b.countries[c.getId()].name:"")})}),a.$on("openlayers.geojson.click",function(b,c){a.$apply(function(a){c&&(a.mouseClickCountry=c?a.countries[c.getId()].name:"")})}),c.get("examples/json/all.json").success(function(b){a.countries={};for(var c=0;c<b.length;c++){var d=b[c];a.countries[d["alpha-3"]]=d}})}])}(),function(){var a=angular.module("webapp");a.controller("FrontPageController",["$scope","$http","olData","olHelpers",function(a,b,c,d){var e={"009":{name:"Oceania",colors:["#CC0066","#993366","#990066","#CC3399","#CC6699"]},"019":{name:"America",colors:["#006699","#336666","#003366","#3399CC","#6699CC"]},150:{name:"Europe",colors:["#FF0000","#CC3333","#990000","#FF3333","#FF6666"]},"002":{name:"Africa",colors:["#00CC00","#339933","#009900","#33FF33","#66FF66"]},142:{name:"Asia",colors:["#FFCC00","#CC9933","#999900","#FFCC33","#FFCC66"]}},f=function(a){if(!a||!a["region-code"])return"#FFF";var b=e[a["region-code"]].colors,c=a["alpha-3"].charCodeAt(0)%b.length;return b[c]},g=function(b){var c=d.createStyle({fill:{color:f(a.countries[b.getId()]),opacity:.4},stroke:{color:"white",width:3}});return[c]};angular.extend(a,{center:{lat:30,lon:0,zoom:2},defaults:{interactions:{mouseWheelZoom:!1}},layers:{main:{source:{type:"OSM"}},geojson:{source:{type:"GeoJSON",url:"examples/json/countries.geo.json"},style:g}},events:{layers:{vector:["mousemove","click"]}}}),b.get("examples/json/all.json").success(function(b){a.countries={};for(var c=0;c<b.length;c++){var d=b[c];a.countries[d["alpha-3"]]=d}}),c.getMap().then(function(b){var c,e=new ol.Overlay({element:document.getElementById("countrybox"),positioning:"center-center",offset:[-25,59],position:[0,0]}),f=!0;a.$on("openlayers.geojson.mousemove",function(h,i,j){return a.$apply(function(b){b.selectedCountry=i?a.countries[i.getId()]:""}),i?(f&&(b.addOverlay(e),f=!1),console.log(j,b.getEventCoordinate(j)),e.setPosition(b.getEventCoordinate(j)),void(i&&(i.setStyle(d.createStyle({fill:{color:"#FFF"}})),c&&i!==c&&c.setStyle(g(c)),c=i))):(b.removeOverlay(e),void(f=!0))})})}])}(),function(){var a=angular.module("webapp");a.controller("LayerBingMapsController",["$scope",function(a){angular.extend(a,{quebec:{lat:46.823,lon:-71.205,zoom:12},layers:{main:{source:{name:"Bing Maps",type:"BingMaps",key:"Aj6XtE1Q1rIvehmjn2Rh1LR2qvMGZ-8vPS9Hn3jCeUiToM77JFnf-kFRzyMELDol",imagerySet:"Road"}}},defaults:{interactions:{mouseWheelZoom:!1}}})}])}(),function(){var a=angular.module("webapp");a.controller("LayerGeoJSONCenterController",["$scope","olData",function(a,b){angular.extend(a,{japan:{lat:27.26,lon:78.86,zoom:3},defaults:{interactions:{mouseWheelZoom:!1}},layers:{main:{source:{type:"OSM"}},geojson:{source:{type:"GeoJSON",url:"examples/json/JPN.geo.json"}}}}),a.centerJSON=function(){b.getMap().then(function(a){b.getLayers().then(function(b){var c=b.geojson.getSource().getExtent();a.getView().fitExtent(c,a.getSize())})})}}])}(),function(){var a=angular.module("webapp");a.controller("LayerGeoJSONChangeStyleController",["$scope",function(a){angular.extend(a,{europe:{lat:39.2,lon:-1.27,zoom:5},defaults:{interactions:{mouseWheelZoom:!1}},layers:{main:{source:{type:"OSM"}},esp:{source:{type:"GeoJSON",url:"examples/json/ESP.geo.json"},style:{fill:{color:"red"},stroke:{color:"white",width:3}}}}})}])}(),function(){var a=angular.module("webapp");a.controller("LayerGeoJSONInlineController",["$scope","$http",function(a,b){b.get("examples/json/ITA.geo.json").success(function(b){var c=b;a.layers.ita={source:{type:"GeoJSON",geojson:{object:c,projection:"EPSG:3857"}},style:{fill:{color:"rgba(255, 0, 0, 0.6)"},stroke:{color:"white",width:3}}}}),angular.extend(a,{europe:{lat:43.88,lon:7.57,zoom:5},defaults:{interactions:{mouseWheelZoom:!1}},layers:{main:{source:{type:"OSM"}}}})}])}(),function(){var a=angular.module("webapp");a.controller("LayerGeoJSONController",["$scope",function(a){angular.extend(a,{europe:{lat:43.88,lon:7.57,zoom:5},defaults:{interactions:{mouseWheelZoom:!1}},layers:{main:{source:{type:"OSM"}},ita:{source:{type:"GeoJSON",url:"examples/json/ITA.geo.json"},style:{fill:{color:"rgba(255, 0, 255, 0.6)"},stroke:{color:"white",width:3}}},fra:{source:{type:"GeoJSON",url:"examples/json/FRA.geo.json"},style:{fill:{color:"rgba(0, 255, 0, 0.6)"},stroke:{color:"white",width:3}}},esp:{source:{type:"GeoJSON",url:"examples/json/ESP.geo.json"},style:{fill:{color:"rgba(255, 0, 0, 0.6)"},stroke:{color:"white",width:3}}},prt:{source:{type:"GeoJSON",url:"examples/json/PRT.geo.json"},style:{fill:{color:"rgba(0, 0, 255, 0.6)"},stroke:{color:"white",width:3}}}}})}])}(),function(){var a=angular.module("webapp");a.controller("LayerHeatmapController",["$scope",function(a){angular.extend(a,{center:{lat:43.88,lon:7.57,zoom:2},defaults:{interactions:{mouseWheelZoom:!1}},layers:{main:{source:{type:"OSM"}},heatmap:{type:"Heatmap",source:{type:"KML",projection:"EPSG:3857",url:"examples/kml/earthquakes.kml",radius:5}}}})}])}(),function(){var a=angular.module("webapp");a.controller("LayerMapQuestController",["$scope",function(a){angular.extend(a,{quebec:{lat:46.823,lon:-71.205,zoom:3},layers:{main:{source:{type:"MapQuest",layer:"sat"}}},defaults:{interactions:{mouseWheelZoom:!1}}})}])}(),function(){var a=angular.module("webapp");a.controller("LayerMultipleController",["$scope",function(a){angular.extend(a,{europe:{lat:43.88,lon:7.57,zoom:3},defaults:{interactions:{mouseWheelZoom:!1}},layers:{geographyclass:{name:"Mapbox Geography Class",visible:!1,opacity:1,source:{type:"TileJSON",url:"http://api.tiles.mapbox.com/v3/mapbox.geography-class.jsonp"}},bing:{visible:!0,name:"Bing Maps",opacity:.8,source:{type:"BingMaps",key:"Aj6XtE1Q1rIvehmjn2Rh1LR2qvMGZ-8vPS9Hn3jCeUiToM77JFnf-kFRzyMELDol",imagerySet:"Road"}},topojson:{visible:!0,name:"TopoJSON of Europe",opacity:.3,source:{type:"TopoJSON",url:"examples/json/world.topo.json"},style:{fill:{color:"yellow"},stroke:{color:"white",width:3}}}}})}])}(),function(){var a=angular.module("webapp");a.controller("LayerOpacityController",["$scope",function(a){angular.extend(a,{london:{lat:51.505,lon:-.09,zoom:3},layers:{mapbox:{visible:!0,opacity:.6,source:{type:"TileJSON",url:"https://api.tiles.mapbox.com/v3/examples.map-i86nkdio.jsonp"}}},defaults:{interactions:{mouseWheelZoom:!1}}})}])}(),function(){var a=angular.module("webapp");a.controller("LayerStamenMapsController",["$scope",function(a){angular.extend(a,{newyork:{lat:40.74,lon:-73.97,zoom:12},layers:{main:{source:{type:"Stamen",layer:"terrain"}}},defaults:{interactions:{mouseWheelZoom:!1}}})}])}(),function(){var a=angular.module("webapp");a.controller("LayerStaticImageController",["$scope",function(a){angular.extend(a,{center:{coord:[900,600],zoom:3},defaults:{view:{projection:"pixel",extent:[0,0,1800,1200]},interactions:{mouseWheelZoom:!1}},layers:{main:{source:{type:"ImageStatic",url:"http://blog.wallpops.com/wp-content/upLoads/2013/05/WPE0624.jpg",imageSize:[1800,1200]}}}})}])}(),function(){var a=angular.module("webapp");a.controller("LayerTopoJSONController",["$scope",function(a){angular.extend(a,{europe:{lat:43.88,lon:7.57,zoom:3},defaults:{interactions:{mouseWheelZoom:!1}},layers:{main:{source:{type:"OSM"}},topojson:{source:{type:"TopoJSON",url:"examples/json/world.topo.json"},style:{fill:{color:"rgba(255, 0, 0, 0.6)"},stroke:{color:"white",width:3}}}}})}])}(),function(){var a=angular.module("webapp");a.controller("LayerWMSController",["$scope",function(a){angular.extend(a,{usa:{lat:37.7,lon:-96.67,zoom:4},layers:{main:{source:{type:"OSM"}},wms:{source:{type:"ImageWMS",url:"http://demo.opengeo.org/geoserver/wms",params:{LAYERS:"topp:states"}}}},defaults:{interactions:{mouseWheelZoom:!1}}})}])}(),function(){var a=angular.module("webapp");a.controller("LayerZoomChangerController",["$scope",function(a){angular.extend(a,{london:{lat:51.505,lon:-.09,zoom:10},layers:{main:{source:{type:"OSM"}}},defaults:{interactions:{mouseWheelZoom:!1}}}),a.$watch("london.zoom",function(b){a.layers.main.source.url=b>12?"http://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png":"http://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}"})}])}(),function(){var a=angular.module("webapp");a.controller("LayerController",["$scope",function(a){a.sources={openstreetmap:{name:"OpenStreetMap",type:"OSM"},mapboxTerrain:{name:"MapBox Terrain",type:"TileJSON",url:"https://api.tiles.mapbox.com/v3/examples.map-i86nkdio.jsonp"},mapboxNight:{name:"MapBox Night",type:"TileJSON",url:"https://api.tiles.mapbox.com/v3/examples.map-0l53fhk2.jsonp"},mapboxGeographyclass:{name:"Mapbox Geography",type:"TileJSON",url:"http://api.tiles.mapbox.com/v3/mapbox.geography-class.jsonp"}},angular.extend(a,{london:{lat:51.505,lon:-.09,zoom:3},layers:{main:{source:a.sources.mapboxGeographyclass}},defaults:{interactions:{mouseWheelZoom:!1}}})}])}(),function(){var a=angular.module("webapp");a.controller("MainController",["$scope","$http",function(a,b){a.getExample=function(){for(var b in a.examples)if(a.examples[b].url===a.activeExample)return a.examples[b]},b.get("json/examples.json").success(function(b){a.examples=b.examples}),a.$on("$routeChangeSuccess",function(b,c){a.activeExample=c.params.example})}])}(),function(){var a=angular.module("webapp");a.controller("MarkerAddRemoveController",["$scope",function(a){angular.extend(a,{center:{lat:51.505,lon:-.09,zoom:7},defaults:{interactions:{mouseWheelZoom:!1}},markers:[{name:"London",active:!0,lat:51.505,lon:-.09},{name:"Bath",active:!0,lat:51.375,lon:-2.35},{name:"Canterbury",active:!1,lat:51.267,lon:1.083}]})}])}(),function(){var a=angular.module("webapp");a.controller("MarkerLabelController",["$scope",function(a){angular.extend(a,{center:{lat:41.02,lon:29.08,zoom:11},defaults:{interactions:{mouseWheelZoom:!1}}})}])}(),function(){var a=angular.module("webapp");a.controller("MarkerPropertiesController",["$scope",function(a){angular.extend(a,{center:{lat:42.9515,lon:-8.6619,zoom:9},styleCheckboxes:function(){return $(".ui.checkbox").checkbox(),!0},changeShowLabel:function(a){a.label.show=!a.label.show},changeShowLabelOnMouseOver:function(a){a.label.showOnMouseOver=!a.label.showOnMouseOver},defaults:{interactions:{mouseWheelZoom:!1}},markers:{finisterre:{name:"Finisterre",lat:42.9078005,lon:-9.265031499999964,label:{message:"Finisterre",show:!0,showOnMouseOver:!0}},santiago:{name:"Santiago de Compostela",lat:42.88059620000001,lon:-8.544641200000001,label:{message:"Santiago de Compostela",show:!0,showOnMouseOver:!0}}}})}])}(),function(){var a=angular.module("webapp");a.controller("MarkerRenderHTMLController",["$scope",function(a){var b=[{name:"Eiffel Tower",lat:48.858093,lon:2.294694,label:{message:'<img src="examples/images/eiffel.jpg" />',show:!1,showOnMouseOver:!0}},{name:"Notre Dame de Paris",lat:48.852966,lon:2.349902,label:{message:'<img src="examples/images/notredame.jpg" />',show:!0,showOnMouseOver:!0}},{name:"Palace of Versailles",lat:48.804722,lon:2.121782,label:{message:'<img src="examples/images/versailles.jpg" />',show:!1,showOnMouseOver:!0}}];angular.extend(a,{center:{lat:48.828093,lon:2.294694,zoom:11},defaults:{interactions:{mouseWheelZoom:!1}},markers:b}),a.centerAndShow=function(c){c.label.show||(b.filter(function(a){a.label.show=!1}),a.center.lat=c.lat,a.center.lon=c.lon),c.label.show=!c.label.show,console.log(a.markers)}}])}(),function(){var a=angular.module("webapp");a.controller("MarkerStaticImageLayerController",["$scope",function(a){var b=[{coord:[853,670],projection:"pixel",label:{message:'<img src="examples/images/eiffel.jpg" />',show:!1,showOnMouseOver:!0}},{coord:[980,580],projection:"pixel",label:{message:'<img src="examples/images/gizah.jpg" />',show:!1,showOnMouseOver:!0}}];angular.extend(a,{center:{coord:[900,600],zoom:2},markers:b,defaults:{view:{projection:"pixel",extent:[0,0,1800,1200]},interactions:{mouseWheelZoom:!1}},layers:{main:{source:{type:"ImageStatic",url:"http://blog.wallpops.com/wp-content/upLoads/2013/05/WPE0624.jpg",imageSize:[1800,1200]}}}})}])}(),function(){var a=angular.module("webapp");a.controller("MarkerController",["$scope",function(a){angular.extend(a,{center:{lat:51.505,lon:-.09,zoom:8},defaults:{interactions:{mouseWheelZoom:!1}}})}])}(),function(){var a=angular.module("webapp");a.controller("ViewRotationController",["$scope",function(a){angular.extend(a,{degrees:0,center:{lat:18.17,lon:-66.37,zoom:8},view:{rotation:0},defaults:{interactions:{mouseWheelZoom:!1}}}),a.degreesToRadians=function(){a.view.rotation=parseFloat(a.degrees,10).toFixed(2)*(Math.PI/180)},a.$watch("view.rotation",function(b){a.degrees=(180*b/Math.PI).toFixed(2)})}])}();var a=angular.module("webapp");a.config(["$routeProvider",function(a){a.when("/",{templateUrl:"partials/frontpage.html"}).when("/:example",{templateUrl:function(a){return"partials/"+a.example+".html"}})}]),angular.module("webapp").run(["$templateCache",function(a){a.put("partials/basic.html",'<div class="ui"><openlayers height="400"></openlayers><h2 class="ui header">Simple Example</h2><p>Showing a simple map on your DOM requires almost no code. Look at the source code of the stand-alone example.</p><p><a ng-href="{{ getExample().extUrl }}">View stand-alone example</a></p></div>'),a.put("partials/center-autodiscover.html",'<div class="ui" ng-controller="CenterAutodiscoverController"><openlayers ol-center="center" ol-defaults="defaults" height="400"></openlayers><h2 class="ui header">Center Autodiscover example</h2><div class="ui form"><div class="four fields"><div class="field"><label>Latitude</label><input type="number" step="any" ng-model="center.lat"></div><div class="field"><label>Longitude</label><input type="number" step="any" ng-model="center.lon"></div><div class="field"><label>Zoom</label><input type="number" step="any" ng-model="center.zoom"></div><div class="field"><label>Discover position</label><div class="ui button" ng-click="center.autodiscover=true">Click me!</div></div></div><p>We can interact with the map with the <strong>center</strong> object, which allows us to set the specific position where the map shoduld point, in a bi-directional way. Take a look at the <strong>center object property</strong> of this map to know how this works:</p><pre>{{ center | json }}</pre><p><a ng-href="{{ getExample().extUrl }}">View stand-alone example</a></p></div></div>'),a.put("partials/center-bounds.html",'<div class="ui" ng-controller="CenterBoundsController"><openlayers ol-center="cairo" ol-defaults="defaults" height="400"></openlayers><h2 class="ui header">Center Bounds example</h2><div class="ui form"><div class="three fields"><div class="field"><label>Latitude</label><input type="number" step="any" ng-model="cairo.lat"></div><div class="field"><label>Longitude</label><input type="number" step="any" ng-model="cairo.lon"></div><div class="field"><label>Zoom</label><input type="number" step="any" ng-model="cairo.zoom"></div></div><p>If you define a <strong>bounds</strong> array inside the center object it will be updated with the bounds of the map.</p><h3>Center object</h3><pre>{{ cairo | json }}</pre><p><a ng-href="{{ getExample().extUrl }}">View stand-alone example</a></p></div></div>'),a.put("partials/center-constrain-zoom.html",'<div class="ui" ng-controller="CenterConstrainZoomController"><openlayers ol-center="london" ol-defaults="defaults" height="400"></openlayers><h2 class="ui header">Center Constrain Zoom example</h2><p>We can constrain the maximum and minimum zoom allowed in our map changing the default view options.</p><div class="ui form"><div class="three fields"><div class="field"><label>Latitude</label><input type="number" step="any" ng-model="london.lat"></div><div class="field"><label>Longitude</label><input type="number" step="any" ng-model="london.lon"></div><div class="field"><label>Zoom</label><input type="number" step="any" ng-model="london.zoom"></div></div><h3>Defaults object</h3><pre>{{ defaults | json }}</pre><p><a ng-href="{{ getExample().extUrl }}">View stand-alone example</a></p></div></div>'),a.put("partials/center-url-hash.html",'<div class="ui" ng-controller="CenterUrlHashController"><openlayers ol-center="london" ol-defaults="defaults" height="400"></openlayers><h2 class="ui header">Center Url Hash map example</h2><div class="ui form"><div class="three fields"><div class="field"><label>Latitude</label><input type="number" step="any" ng-model="london.lat"></div><div class="field"><label>Longitude</label><input type="number" step="any" ng-model="london.lon"></div><div class="field"><label>Zoom</label><input type="number" step="any" ng-model="london.zoom"></div></div><div class="ui 4 fluid buttons"><a class="ui button" href="#/center-url-hash?c=36.8899:-121.8008:12">Watsonville</a> <a class="ui button" href="#/center-url-hash?c=34.0078:-118.8060:14">Malibu</a> <a class="ui button" href="#/center-url-hash?c=33.7717:-117.9458:12">Garden Grove</a> <a class="ui button" href="#/center-url-hash?c=32.5290:-117.0442:13">Tijuana</a></div><p>We can interact with the map with the <strong>center</strong> object, which allows us to set the specific position where the map shoduld point, in a bi-directional way. Take a look at the <strong>center object property</strong> of this map to know how this works:</p><pre>{{ london | json }}</pre><p><a ng-href="{{ getExample().extUrl }}">View stand-alone example</a></p></div></div>'),a.put("partials/center.html",'<div class="ui" ng-controller="CenterController"><openlayers ol-center="london" ol-defaults="defaults" height="400"></openlayers><h2 class="ui header">Center map example</h2><div class="ui form"><div class="three fields"><div class="field"><label>Latitude</label><input type="number" step="any" ng-model="london.lat"></div><div class="field"><label>Longitude</label><input type="number" step="any" ng-model="london.lon"></div><div class="field"><label>Zoom</label><input type="number" step="any" ng-model="london.zoom"></div></div><p>We can interact with the map with the <strong>center</strong> object, which allows us to set the specific position where the map shoduld point, in a bi-directional way. Take a look at the <strong>center object property</strong> of this map to know how this works:</p><pre>{{ london | json }}</pre><p><a ng-href="{{ getExample().extUrl }}">View stand-alone example</a></p></div></div>'),a.put("partials/custom.html",'<div class="ui" ng-controller="CustomController"><openlayers ol-center="london" ol-defaults="defaults" height="400"></openlayers><h2 class="ui header">Custom Parameters Example</h2><p>Maybe you need to change the default parameters before creating the map, for example, setting the default controls, interactions, or layer tiles.</p><h3>Map <strong>defaults</strong> object:</h3><pre>{{ defaults | json }}</pre><p><a ng-href="{{ getExample().extUrl }}">View stand-alone example</a></p></div>'),a.put("partials/event-defaults.html",'<div class="ui" ng-controller="EventDefaultsController"><openlayers ol-center="london" ol-events="events" ol-defaults="defaults" height="400"></openlayers><h2 class="ui header">Event Defaults Example</h2><h3>Map <strong>defaults</strong> object:</h3><p>You can propagate some map events so you can react based on this events on your application. Take a look at the <strong>events</strong> object.</p><h3>Projection type desired:</h3><div class="2 ui fluid buttons"><div class="ui button" ng-repeat="proj in [ \'EPSG:4326\', \'EPSG:3857\' ]" ng-click="changeProjection(proj)" ng-class="{ active: projection === proj }" ng-bind="proj"></div></div><h3>Mouse position in map</h3><pre ng-bind="mouseposition | json"></pre><h3>Mouse click position in map</h3><pre ng-bind="mouseclickposition | json"></pre><h3>Events object</h3><pre>{{ events | json }}</pre><p><a ng-href="{{ getExample().extUrl }}">View stand-alone example</a></p></div>'),a.put("partials/event-vector-layer.html",'<div class="ui" ng-controller="EventVectorLayerController"><openlayers ol-center="center" ol-events="events" ol-layers="layers" ol-defaults="defaults" height="400"></openlayers><h2 class="ui header">Event propagation of a GeojJSON object Example</h2><p>You can propagate layer events, like a vector layer, with the feature selected by the user in the event.</p><h3>Mouse over this country: {{ mouseMoveCountry }}</h3><h3>Mouse click on this country: {{ mouseClickCountry }}</h3><p><a ng-href="{{ getExample().extUrl }}">View stand-alone example</a></p></div>'),a.put("partials/frontpage.html",'<div class="ui" ng-controller="FrontPageController"><openlayers ol-center="center" ol-layers="layers" ol-events="events" height="620"></openlayers><div id="countrybox" class="info country f32"><div ng-show="selectedCountry" class="flag" ng-class="selectedCountry[\'alpha-2\']|lowercase"></div>{{ selectedCountry.name || \'No country\'}}</div></div>'),a.put("partials/layer-bing-maps.html",'<div class="ui" ng-controller="LayerBingMapsController"><openlayers ol-center="quebec" ol-layers="layers" ol-defaults="defaults" height="400px"></openlayers><br><div class="3 ui fluid buttons"><div class="ui button" ng-repeat="imagerySet in [ \'Road\', \'Aerial\', \'AerialWithLabels\' ]" ng-click="layers.main.source.imagerySet=imagerySet" ng-class="{ active: layers.main.source.imagerySet === imagerySet }" ng-bind="imagerySet"></div></div><h2 class="ui header">Bing Maps example</h2><p>You can use easily the Microsoft Bing Maps tiles with OpenLayers. But first of all, you must request an API key to use these maps <a href="http://www.bingmapsportal.com">here</a>.</p><h3>Current <strong>layers</strong> object:</h3><pre>{{ layers | json }}</pre><p><a ng-href="{{ getExample().extUrl }}">View stand-alone example</a></p></div>'),a.put("partials/layer-geojson-center.html",'<div class="ui" ng-controller="LayerGeoJSONCenterController"><openlayers ol-center="japan" ol-layers="layers" ol-defaults="defaults" height="400px"></openlayers><h2 class="ui header">GeoJSON Center example</h2><p>You can center the map relative to the extension of the JSON, like you can see in this example.</p><button class="ui button large blue" ng-click="centerJSON()">Center to Japan</button><h3>Current <strong>layers</strong> object:</h3><pre>{{ layers | json }}</pre><p><a ng-href="{{ getExample().extUrl }}">View stand-alone example</a></p></div>'),a.put("partials/layer-geojson-change-style.html",'<div class="ui" ng-controller="LayerGeoJSONChangeStyleController"><openlayers ol-center="europe" ol-layers="layers" ol-defaults="defaults" height="400px"></openlayers><h2 class="ui header">Change style of GeoJSON vectorial shape</h2><p>You can change dinamically the GeoJSON properties and it will be reflected on the map rendered.</p><div class="ui form"><div class="field"><label>Fill color</label><div class="3 ui fluid buttons"><div class="ui button" ng-repeat="color in [ \'red\', \'green\', \'blue\' ]" ng-click="layers.esp.style.fill.color=color" ng-class="{ active: layers.esp.style.fill.color === color }" ng-bind="color"></div></div></div><br><div class="field"><label>Stroke width</label><input type="range" min="0" max="20" value="5" ng-model="layers.esp.style.stroke.width"></div></div><h3>Current <strong>layers</strong> object:</h3><pre>{{ layers | json }}</pre><p><a ng-href="{{ getExample().extUrl }}">View stand-alone example</a></p></div>'),a.put("partials/layer-geojson-inline.html",'<div class="ui" ng-controller="LayerGeoJSONInlineController"><openlayers ol-center="europe" ol-layers="layers" ol-defaults="defaults" height="400px"></openlayers><h2 class="ui header">GeoJSON Inline example</h2><p>This example adds the GeoJSON structure inline inside the layer object, instead of loading the GeoJSON from OpenLayers library.</p><h3>Current <strong>layers</strong> object:</h3><pre>{{ layers | json }}</pre><p><a ng-href="{{ getExample().extUrl }}">View stand-alone example</a></p></div>'),a.put("partials/layer-geojson.html",'<div class="ui" ng-controller="LayerGeoJSONController"><openlayers ol-center="europe" ol-layers="layers" ol-defaults="defaults" height="400px"></openlayers><h2 class="ui header">GeoJSON Layer example</h2><p>You can load and style GeoJSON objects easily with Openlayers.</p><h3>Current <strong>layers</strong> object:</h3><pre>{{ layers | json }}</pre><p><a ng-href="{{ getExample().extUrl }}">View stand-alone example</a></p></div>'),a.put("partials/layer-heatmap.html",'<div class="ui" ng-controller="LayerHeatmapController"><openlayers ol-center="center" ol-layers="layers" ol-defaults="defaults" height="400px"></openlayers><h2 class="ui header">Layer KML Heatmap example</h2><p>You can load an render a HeatMap in KML format with Openlayers.</p><h3>Current <strong>layers</strong> object:</h3><pre>{{ layers | json }}</pre><p><a ng-href="{{ getExample().extUrl }}">View stand-alone example</a></p></div>'),a.put("partials/layer-mapquest.html",'<div class="ui" ng-controller="LayerMapQuestController"><openlayers ol-center="quebec" ol-layers="layers" ol-defaults="defaults" height="400px"></openlayers><br><div class="3 ui fluid buttons"><div class="ui button" ng-repeat="layer in [ \'sat\', \'osm\', \'hyb\' ]" ng-click="layers.main.source.layer=layer" ng-class="{ active: layers.main.source.layer === layer }" ng-bind="layer"></div></div><h2 class="ui header">MapQuest Layer example</h2><p>You can use easily use the MapQuest Maps with OpenLayers too.</p><h3>Current <strong>layers</strong> object:</h3><pre>{{ layers | json }}</pre><p><a ng-href="{{ getExample().extUrl }}">View stand-alone example</a></p></div>'),a.put("partials/layer-multiple.html",'<div class="ui" ng-controller="LayerMultipleController"><openlayers ol-center="europe" ol-layers="layers" ol-defaults="defaults" height="400px"></openlayers><br><div class="3 ui fluid buttons"><div class="ui button" ng-repeat="layer in layers" ng-click="layer.visible=!layer.visible" ng-class="{ active: layer.visible===true }" ng-bind="layer.name"></div></div><br><div class="ui form"><div class="field" ng-repeat="layer in layers" ng-if="layer.visible === true"><label ng-bind="layer.name + \' Layer Opacity\'"></label><input type="range" min="0" max="1" step="0.01" ng-model="layer.opacity"></div></div><h2 class="ui header">Multiple and different layer types example</h2><p>You can mix any of the previous seen layers together.</p><h3>Current <strong>layers</strong> object:</h3><pre>{{ layers | json }}</pre><p><a ng-href="{{ getExample().extUrl }}">View stand-alone example</a></p></div>'),a.put("partials/layer-opacity.html",'<div class="ui" ng-controller="LayerOpacityController"><openlayers ol-center="london" ol-layers="layers" ol-defaults="defaults" height="400px"></openlayers><h2 class="ui header">Layer Opacity example</h2><p>This examples show you how you can interact with the opacity of the layer.</p><div class="ui form"><div class="field"><label>Opacity</label><input type="range" min="0" max="1" step="0.01" ng-model="layers.mapbox.opacity"></div></div><h3>Layer object</h3><pre>{{ layers.mapbox | json }}</pre><p><a ng-href="{{ getExample().extUrl }}">View stand-alone example</a></p></div>'),a.put("partials/layer-stamen-maps.html",'<div class="ui" ng-controller="LayerStamenMapsController"><openlayers ol-center="newyork" ol-layers="layers" ol-defaults="defaults" height="400px"></openlayers><br><div class="3 ui fluid buttons"><div class="ui button" ng-repeat="layer in [ \'watercolor\', \'terrain\', \'toner\' ]" ng-click="layers.main.source.layer=layer" ng-class="{ active: layers.main.source.layer === layer }" ng-bind="layer"></div></div><h2 class="ui header">Bing Maps example</h2><p>You can use easily the Microsoft Bing Maps tiles with OpenLayers. But first of all, you must request an API key to use these maps <a href="http://www.bingmapsportal.com">here</a>.</p><h3>Current <strong>layers</strong> object:</h3><pre>{{ layers | json }}</pre><p><a ng-href="{{ getExample().extUrl }}">View stand-alone example</a></p></div>'),a.put("partials/layer-static-image.html",'<div class="ui" ng-controller="LayerStaticImageController"><openlayers ol-center="center" ol-layers="layers" ol-defaults="defaults" height="400px"></openlayers><h2 class="ui header">Static Image Layer example</h2><p>You can add an static image inside a layer and use OpenLayers to pan/zoom.</p><h3>Current <strong>layers</strong> object:</h3><pre>{{ layers | json }}</pre><p><a ng-href="{{ getExample().extUrl }}">View stand-alone example</a></p></div>'),a.put("partials/layer-topojson.html",'<div class="ui" ng-controller="LayerTopoJSONController"><openlayers ol-center="europe" ol-layers="layers" ol-defaults="defaults" height="400px"></openlayers><h2 class="ui header">TopoJSON Layer example</h2><p>You can load and style TopoJSON objects easily with Openlayers.</p><h3>Current <strong>layers</strong> object:</h3><pre>{{ layers | json }}</pre><p><a ng-href="{{ getExample().extUrl }}">View stand-alone example</a></p></div>'),a.put("partials/layer-wms.html",'<div class="ui" ng-controller="LayerWMSController"><openlayers ol-center="usa" ol-layers="layers" ol-defaults="defaults" height="400px"></openlayers><h2 class="ui header">WMS Layer example</h2><p>You can load a WMS Layer from a GeoServer source.</p><h3>Current <strong>layers</strong> object:</h3><pre>{{ layers | json }}</pre><p><a ng-href="{{ getExample().extUrl }}">View stand-alone example</a></p></div>'),a.put("partials/layer-zoom-changer.html",'<div class="ui" ng-controller="LayerZoomChangerController"><openlayers ol-center="london" ol-layers="layers" ol-defaults="defaults" height="400px"></openlayers><h2 class="ui header">Layer Zoom Changer example</h2><p>This examples show you how you could change the active layer in response to a simple event, for example, changing the zoom level of the map into a highter than 12 value.</p><h3>Center zoom level</h3><pre>{{ london.zoom | json }}</pre><h3>Layer Source object</h3><pre>{{ layers.main.source | json }}</pre><p><a ng-href="{{ getExample().extUrl }}">View stand-alone example</a></p></div>'),a.put("partials/layer.html",'<div class="ui" ng-controller="LayerController"><openlayers ol-center="london" ol-layers="layers" ol-defaults="defaults" height="400px"></openlayers><h2 class="ui header">Layers change tiles example</h2><p>In this map you can change the main active layer pressing the buttons below. Try it.</p><div class="4 ui fluid buttons"><div class="ui button" ng-class="{ active: layers.main.source === source }" ng-repeat="(key, source) in sources" ng-click="layers.main.source=source" ng-bind="source.name"></div></div><br><p>On each button click we\'re simply setting the <strong>layers</strong> object to a new value.</p><h3>Current <strong>layers</strong> object:</h3><pre>{{ layers | json }}</pre><p><a ng-href="{{ getExample().extUrl }}">View stand-alone example</a></p></div>'),a.put("partials/marker-add-remove.html",'<div class="ui" ng-controller="MarkerAddRemoveController"><openlayers ol-center="center" ol-defaults="defaults" height="400px"><ol-marker ng-repeat="marker in markers | filter: {active: true}" lat="marker.lat" lon="marker.lon"></ol-marker></openlayers><br><div class="3 ui fluid buttons"><div class="ui button" ng-class="{ active: marker.active === true }" ng-repeat="marker in markers" ng-click="marker.active=!marker.active" ng-bind="marker.name"></div></div><h2 class="ui header">Markers Interact Example</h2><p>Adding and interacting with markers inside our OpenLayer maps is really easy. Take a look at the stand-alone source code.</p><p><a ng-href="{{ getExample().extUrl }}">View stand-alone example</a></p></div>'),a.put("partials/marker-label.html",'<div class="ui" ng-controller="MarkerStaticLayerController"><openlayers ol-center="center" ol-defaults="defaults" height="400px"><ol-marker name="Istanbul" lat="41.01" lon="28.96" message="Here is Istanbul. Oh my god, such a great city!"></ol-marker></openlayers><h2 class="ui header">Marker with Label Example</h2><p>Adding a label to our markers is done via a <strong>ol-marker</strong> propety: "<strong>message</strong>". Take a look at the stand-alone source code to see it.</p><p><a ng-href="{{ getExample().extUrl }}">View stand-alone example</a></p></div>'),a.put("partials/marker-properties.html",'<div class="ui" ng-controller="MarkerPropertiesController"><openlayers ol-center="center" ol-defaults="defaults" height="400px"><ol-marker ol-marker-properties="markers.santiago"></ol-marker><ol-marker ol-marker-properties="markers.finisterre"></ol-marker></openlayers><h2 class="ui header">Marker Properties Example</h2><p>You can change dinamically the markers properties. Try with these two markers:</p><div class="ui form" ng-repeat="marker in markers" ng-show="styleCheckboxes()"><h3 ng-bind="marker.name"></h3><div class="field"><label>Message</label><input type="text" ng-model="marker.label.message"></div><div class="inline field"><div class="ui checkbox" ng-click="changeShowLabel(marker)"><input type="checkbox" checked><label>Show label</label></div></div><div class="inline field"><div class="ui checkbox" ng-click="changeShowLabelOnMouseOver(marker)"><input type="checkbox" checked><label>Show label on Mouse Over</label></div></div><h3>Marker object</h3><pre>{{ marker | json }}</pre></div><br><p><a ng-href="{{ getExample().extUrl }}">View stand-alone example</a></p></div>'),a.put("partials/marker-render-html.html",'<div class="ui render-html" ng-controller="MarkerRenderHTMLController"><openlayers ol-center="center" ol-defaults="defaults" height="400px"><ol-marker ng-repeat="marker in markers" ol-marker-properties="marker"></ol-marker></openlayers><br><div class="3 ui fluid buttons"><div class="ui button" ng-class="{ active: marker.label.show === true }" ng-repeat="marker in markers" ng-click="centerAndShow(marker)" ng-bind="marker.name"></div></div><h2 class="ui header">Render HTML inside the marker labels</h2><p>You can render HTML inside a marker label if you want, making use of the <a href="https://docs.angularjs.org/api/ngSanitize/service/$sanitize">angular-sanitize module.</a></p><h3>Markers object</h3><pre>{{ markers | json }}</pre><p><a ng-href="{{ getExample().extUrl }}">View stand-alone example</a></p></div>'),a.put("partials/marker-static-image-layer.html",'<div class="ui" ng-controller="MarkerStaticImageLayerController"><openlayers ol-center="center" ol-defaults="defaults" ol-layers="layers" height="400px"><ol-marker ng-repeat="marker in markers" ol-marker-properties="marker"></ol-marker></openlayers><h2 class="ui header">Markers inside an Static Image Layer</h2><p>Mouse over the markers to show the label with an image.</p><h3>Layers object</h3><pre>{{ layers | json }}</pre><h3>Markers object</h3><pre>{{ markers | json }}</pre><p><a ng-href="{{ getExample().extUrl }}">View stand-alone example</a></p></div>'),a.put("partials/marker.html",'<div class="ui" ng-controller="MarkerController"><openlayers ol-center="center" ol-defaults="defaults" height="400px"><ol-marker name="London" lat="51.505" lon="-0.09"></ol-marker></openlayers><h2 class="ui header">Marker Example</h2><p>Adding and interacting with markers inside our OpenLayer maps is really easy. Take a look at the stand-alone source code.</p><p><a ng-href="{{ getExample().extUrl }}">View stand-alone example</a></p></div>'),a.put("partials/view-rotation.html",'<div class="ui" ng-controller="ViewRotationController"><openlayers ol-center="center" ol-view="view" ol-defaults="defaults" height="400"></openlayers><br><div class="ui form"><div class="field"><label>Degrees ({{ degrees }}&deg;)</label><input type="range" min="-180" max="180" ng-change="degreesToRadians()" ng-model="degrees"></div></div><h2 class="ui header">View Rotation Example</h2><p>This examples shows how to rotate the map view interacting with the <strong>view</strong> object.</p><h3>View object</h3><pre>{{ view | json }}</pre><p><a ng-href="{{ getExample().extUrl }}">View stand-alone example</a></p></div>')
}])}();